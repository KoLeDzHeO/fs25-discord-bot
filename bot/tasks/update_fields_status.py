import discord
from modules.fields import parse_field_statuses
from config import config
from utils.message_tracker import get_id, set_id

async def update_fields_status(client, ftp_client):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–ª–µ–π
    """
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª–µ–π
        xml_bytes = await ftp_client.fetch_fields_file()
        statuses = parse_field_statuses(xml_bytes)
        if not statuses:
            print("[–ü–æ–ª—è] –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
            return

        # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (–¥–æ 25 —Å—Ç—Ä–æ–∫)
        chunk = statuses[:25]
        embed = discord.Embed(title="üó∫Ô∏è –°—Ç–∞—Ç—É—Å –ø–æ–ª–µ–π", color=0x27ae60)
        for line in chunk:
            embed.add_field(name="\u200b", value=line, inline=False)

        # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –∏ ID —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        channel = await client.fetch_channel(int(config.DISCORD_CHANNEL_ID))
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º tracker –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—è
        message_id = get_id("fields_message_id")

        if message_id:
            try:
                message = await channel.fetch_message(int(message_id))
                await message.edit(embed=embed)
                print("[–ü–æ–ª—è] –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
                return
            except discord.NotFound:
                print("[–ü–æ–ª—è] –°—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ...")

        # –ï—Å–ª–∏ ID –Ω–µ—Ç –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ ‚Äî —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ
        new_message = await channel.send(embed=embed)
        set_id("fields_message_id", new_message.id)
        print("[–ü–æ–ª—è] –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª–µ–π.")

    except Exception as e:
        print(f"[–ü–æ–ª—è] –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")

