import aiohttp
import asyncio
from datetime import timedelta
import discord
from config.config import config
from ftp.fetcher import fetch_file
from .fetchers import fetch_stats_xml, fetch_api_file, fetch_dedicated_server_stats
from .parsers import parse_all, parse_players_online
from .discord_ui import build_embed
from utils.logger import log_debug
from utils.online_history import insert_online_players, make_online_graph
from utils.helpers import get_moscow_datetime

async def ftp_polling_task(bot: discord.Client, db_pool):
    log_debug("[TASK] –ó–∞–ø—É—â–µ–Ω ftp_polling_task")
    await bot.wait_until_ready()
    channel = await bot.fetch_channel(config.channel_id)
    if channel is None:
        log_debug("‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return

    async with aiohttp.ClientSession() as session:
        while not bot.is_closed():
            log_debug("[FTP] –ü–æ–ª—É—á–∞–µ–º dedicated-server-stats.xml")
            stats_xml = await fetch_stats_xml(session)
            log_debug("[API] –ü–æ–ª—É—á–∞–µ–º vehicles")
            vehicles_xml = await fetch_api_file(session, "vehicles")
            log_debug("[FTP] –ü–æ–ª—É—á–∞–µ–º careerSavegame.xml")
            career_ftp = await fetch_file("careerSavegame.xml")
            log_debug("[FTP] –ü–æ–ª—É—á–∞–µ–º farmland.xml")
            farmland_ftp = await fetch_file("farmland.xml")
            log_debug("[FTP] –ü–æ–ª—É—á–∞–µ–º farms.xml")
            farms_ftp = await fetch_file("farms.xml")
            log_debug("[FTP] –ü–æ–ª—É—á–∞–µ–º dedicated-server-stats.xml (feed)")
            dedicated_server_stats_ftp = await fetch_dedicated_server_stats(session)

            log_debug(
                f"[DEBUG] –°—Ç–∞—Ç—É—Å—ã: stats={bool(stats_xml)}, vehicles={bool(vehicles_xml)}, careerFTP={bool(career_ftp)}, farmlandFTP={bool(farmland_ftp)}, farms={bool(farms_ftp)}"
            )

            all_files_loaded = all([stats_xml, vehicles_xml, career_ftp, farmland_ftp, farms_ftp])
            if all_files_loaded:
                server_status = "üü¢ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"
                log_debug("[FTP] –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
                data = parse_all(
                    server_stats=stats_xml,
                    vehicles_api=vehicles_xml,
                    career_savegame_ftp=career_ftp,
                    farmland_ftp=farmland_ftp,
                    farms_xml=farms_ftp,
                    dedicated_server_stats=dedicated_server_stats_ftp,
                )
                # –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
            else:
                server_status = "üî¥ –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                data = {
                    "last_month_profit": None,
                    "server_name": None,
                    "map_name": None,
                    "slots_used": None,
                    "slots_max": None,
                    "farm_money": None,
                    "fields_owned": None,
                    "fields_total": None,
                    "vehicles_owned": None,
                    "players_online": [],
                }

            data["server_status"] = server_status
            embed = build_embed(data)

            graph_file = None
            if all_files_loaded:
                graph_file = await make_online_graph(db_pool)

            async for msg in channel.history(limit=None):
                try:
                    await msg.delete()
                except Exception as e:
                    log_debug(f"[Discord] –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

            log_debug("[Discord] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ")
            if graph_file:
                embed.set_image(url="attachment://online_graph.png")
                with open(graph_file, "rb") as f:
                    await channel.send(
                        embed=embed,
                        file=discord.File(f, filename="online_graph.png"),
                    )
            else:
                await channel.send(embed=embed)
            log_debug("[Discord] ‚úÖ Embed —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")

            await asyncio.sleep(config.ftp_poll_interval)


async def api_polling_task(db_pool):
    """–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç API –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ–Ω–ª–∞–π–Ω –∏–≥—Ä–æ–∫–æ–≤."""
    async with aiohttp.ClientSession() as session:
        while True:
            stats_xml = await fetch_dedicated_server_stats(session)
            if stats_xml:
                players = parse_players_online(stats_xml)
                await insert_online_players(db_pool, players)
            await asyncio.sleep(config.api_poll_interval)


